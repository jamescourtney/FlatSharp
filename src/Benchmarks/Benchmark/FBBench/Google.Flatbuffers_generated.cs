// <auto-generated>
//  automatically generated by the FlatBuffers compiler, do not modify
// </auto-generated>

namespace Benchmark.FBBench.Google
{

using global::System;
using global::System.Collections.Generic;
using global::Google.FlatBuffers;

public struct Foo : IFlatbufferObject
{
  private Struct __p;
  public ByteBuffer ByteBuffer { get { return __p.bb; } }
  public void __init(int _i, ByteBuffer _bb) { __p = new Struct(_i, _bb); }
  public Foo __assign(int _i, ByteBuffer _bb) { __init(_i, _bb); return this; }

  public ulong Id { get { return __p.bb.GetUlong(__p.bb_pos + 0); } }
  public short Count { get { return __p.bb.GetShort(__p.bb_pos + 8); } }
  public sbyte Prefix { get { return __p.bb.GetSbyte(__p.bb_pos + 10); } }
  public uint Length { get { return __p.bb.GetUint(__p.bb_pos + 12); } }

  public static Offset<Benchmark.FBBench.Google.Foo> CreateFoo(FlatBufferBuilder builder, ulong Id, short Count, sbyte Prefix, uint Length) {
    builder.Prep(8, 16);
    builder.PutUint(Length);
    builder.Pad(1);
    builder.PutSbyte(Prefix);
    builder.PutShort(Count);
    builder.PutUlong(Id);
    return new Offset<Benchmark.FBBench.Google.Foo>(builder.Offset);
  }
  public FooT UnPack() {
    var _o = new FooT();
    this.UnPackTo(_o);
    return _o;
  }
  public void UnPackTo(FooT _o) {
    _o.Id = this.Id;
    _o.Count = this.Count;
    _o.Prefix = this.Prefix;
    _o.Length = this.Length;
  }
  public static Offset<Benchmark.FBBench.Google.Foo> Pack(FlatBufferBuilder builder, FooT _o) {
    if (_o == null) return default(Offset<Benchmark.FBBench.Google.Foo>);
    return CreateFoo(
      builder,
      _o.Id,
      _o.Count,
      _o.Prefix,
      _o.Length);
  }
}

public class FooT
{
  public ulong Id { get; set; }
  public short Count { get; set; }
  public sbyte Prefix { get; set; }
  public uint Length { get; set; }

  public FooT() {
    this.Id = 0;
    this.Count = 0;
    this.Prefix = 0;
    this.Length = 0;
  }
}

public struct Bar : IFlatbufferObject
{
  private Struct __p;
  public ByteBuffer ByteBuffer { get { return __p.bb; } }
  public void __init(int _i, ByteBuffer _bb) { __p = new Struct(_i, _bb); }
  public Bar __assign(int _i, ByteBuffer _bb) { __init(_i, _bb); return this; }

  public Benchmark.FBBench.Google.Foo Parent { get { return (new Benchmark.FBBench.Google.Foo()).__assign(__p.bb_pos + 0, __p.bb); } }
  public int Time { get { return __p.bb.GetInt(__p.bb_pos + 16); } }
  public float Ratio { get { return __p.bb.GetFloat(__p.bb_pos + 20); } }
  public ushort Size { get { return __p.bb.GetUshort(__p.bb_pos + 24); } }

  public static Offset<Benchmark.FBBench.Google.Bar> CreateBar(FlatBufferBuilder builder, ulong parent_Id, short parent_Count, sbyte parent_Prefix, uint parent_Length, int Time, float Ratio, ushort Size) {
    builder.Prep(8, 32);
    builder.Pad(6);
    builder.PutUshort(Size);
    builder.PutFloat(Ratio);
    builder.PutInt(Time);
    builder.Prep(8, 16);
    builder.PutUint(parent_Length);
    builder.Pad(1);
    builder.PutSbyte(parent_Prefix);
    builder.PutShort(parent_Count);
    builder.PutUlong(parent_Id);
    return new Offset<Benchmark.FBBench.Google.Bar>(builder.Offset);
  }
  public BarT UnPack() {
    var _o = new BarT();
    this.UnPackTo(_o);
    return _o;
  }
  public void UnPackTo(BarT _o) {
    _o.Parent = this.Parent.UnPack();
    _o.Time = this.Time;
    _o.Ratio = this.Ratio;
    _o.Size = this.Size;
  }
  public static Offset<Benchmark.FBBench.Google.Bar> Pack(FlatBufferBuilder builder, BarT _o) {
    if (_o == null) return default(Offset<Benchmark.FBBench.Google.Bar>);
    var _parent_id = _o.Parent.Id;
    var _parent_count = _o.Parent.Count;
    var _parent_prefix = _o.Parent.Prefix;
    var _parent_length = _o.Parent.Length;
    return CreateBar(
      builder,
      _parent_id,
      _parent_count,
      _parent_prefix,
      _parent_length,
      _o.Time,
      _o.Ratio,
      _o.Size);
  }
}

public class BarT
{
  public Benchmark.FBBench.Google.FooT Parent { get; set; }
  public int Time { get; set; }
  public float Ratio { get; set; }
  public ushort Size { get; set; }

  public BarT() {
    this.Parent = new Benchmark.FBBench.Google.FooT();
    this.Time = 0;
    this.Ratio = 0.0f;
    this.Size = 0;
  }
}

public struct FooBar : IFlatbufferObject
{
  private Table __p;
  public ByteBuffer ByteBuffer { get { return __p.bb; } }
  public static void ValidateVersion() { FlatBufferConstants.FLATBUFFERS_22_10_26(); }
  public static FooBar GetRootAsFooBar(ByteBuffer _bb) { return GetRootAsFooBar(_bb, new FooBar()); }
  public static FooBar GetRootAsFooBar(ByteBuffer _bb, FooBar obj) { return (obj.__assign(_bb.GetInt(_bb.Position) + _bb.Position, _bb)); }
  public void __init(int _i, ByteBuffer _bb) { __p = new Table(_i, _bb); }
  public FooBar __assign(int _i, ByteBuffer _bb) { __init(_i, _bb); return this; }

  public Benchmark.FBBench.Google.Bar? Sibling { get { int o = __p.__offset(4); return o != 0 ? (Benchmark.FBBench.Google.Bar?)(new Benchmark.FBBench.Google.Bar()).__assign(o + __p.bb_pos, __p.bb) : null; } }
  public string Name { get { int o = __p.__offset(6); return o != 0 ? __p.__string(o + __p.bb_pos) : null; } }
#if ENABLE_SPAN_T
  public Span<byte> GetNameBytes() { return __p.__vector_as_span<byte>(6, 1); }
#else
  public ArraySegment<byte>? GetNameBytes() { return __p.__vector_as_arraysegment(6); }
#endif
  public byte[] GetNameArray() { return __p.__vector_as_array<byte>(6); }
  public double Rating { get { int o = __p.__offset(8); return o != 0 ? __p.bb.GetDouble(o + __p.bb_pos) : (double)0.0; } }
  public byte Postfix { get { int o = __p.__offset(10); return o != 0 ? __p.bb.Get(o + __p.bb_pos) : (byte)0; } }

  public static Offset<Benchmark.FBBench.Google.FooBar> CreateFooBar(FlatBufferBuilder builder,
      Benchmark.FBBench.Google.BarT sibling = null,
      StringOffset nameOffset = default(StringOffset),
      double rating = 0.0,
      byte postfix = 0) {
    builder.StartTable(4);
    FooBar.AddRating(builder, rating);
    FooBar.AddName(builder, nameOffset);
    FooBar.AddSibling(builder, Benchmark.FBBench.Google.Bar.Pack(builder, sibling));
    FooBar.AddPostfix(builder, postfix);
    return FooBar.EndFooBar(builder);
  }

  public static void StartFooBar(FlatBufferBuilder builder) { builder.StartTable(4); }
  public static void AddSibling(FlatBufferBuilder builder, Offset<Benchmark.FBBench.Google.Bar> siblingOffset) { builder.AddStruct(0, siblingOffset.Value, 0); }
  public static void AddName(FlatBufferBuilder builder, StringOffset nameOffset) { builder.AddOffset(1, nameOffset.Value, 0); }
  public static void AddRating(FlatBufferBuilder builder, double rating) { builder.AddDouble(2, rating, 0.0); }
  public static void AddPostfix(FlatBufferBuilder builder, byte postfix) { builder.AddByte(3, postfix, 0); }
  public static Offset<Benchmark.FBBench.Google.FooBar> EndFooBar(FlatBufferBuilder builder) {
    int o = builder.EndTable();
    return new Offset<Benchmark.FBBench.Google.FooBar>(o);
  }
  public FooBarT UnPack() {
    var _o = new FooBarT();
    this.UnPackTo(_o);
    return _o;
  }
  public void UnPackTo(FooBarT _o) {
    _o.Sibling = this.Sibling.HasValue ? this.Sibling.Value.UnPack() : null;
    _o.Name = this.Name;
    _o.Rating = this.Rating;
    _o.Postfix = this.Postfix;
  }
  public static Offset<Benchmark.FBBench.Google.FooBar> Pack(FlatBufferBuilder builder, FooBarT _o) {
    if (_o == null) return default(Offset<Benchmark.FBBench.Google.FooBar>);
    var _name = _o.Name == null ? default(StringOffset) : builder.CreateString(_o.Name);
    return CreateFooBar(
      builder,
      _o.Sibling,
      _name,
      _o.Rating,
      _o.Postfix);
  }
}

public class FooBarT
{
  public Benchmark.FBBench.Google.BarT Sibling { get; set; }
  public string Name { get; set; }
  public double Rating { get; set; }
  public byte Postfix { get; set; }

  public FooBarT() {
    this.Sibling = new Benchmark.FBBench.Google.BarT();
    this.Name = null;
    this.Rating = 0.0;
    this.Postfix = 0;
  }
}

public struct FooBarContainer : IFlatbufferObject
{
  private Table __p;
  public ByteBuffer ByteBuffer { get { return __p.bb; } }
  public static void ValidateVersion() { FlatBufferConstants.FLATBUFFERS_22_10_26(); }
  public static FooBarContainer GetRootAsFooBarContainer(ByteBuffer _bb) { return GetRootAsFooBarContainer(_bb, new FooBarContainer()); }
  public static FooBarContainer GetRootAsFooBarContainer(ByteBuffer _bb, FooBarContainer obj) { return (obj.__assign(_bb.GetInt(_bb.Position) + _bb.Position, _bb)); }
  public void __init(int _i, ByteBuffer _bb) { __p = new Table(_i, _bb); }
  public FooBarContainer __assign(int _i, ByteBuffer _bb) { __init(_i, _bb); return this; }

  public Benchmark.FBBench.Google.FooBar? List(int j) { int o = __p.__offset(4); return o != 0 ? (Benchmark.FBBench.Google.FooBar?)(new Benchmark.FBBench.Google.FooBar()).__assign(__p.__indirect(__p.__vector(o) + j * 4), __p.bb) : null; }
  public int ListLength { get { int o = __p.__offset(4); return o != 0 ? __p.__vector_len(o) : 0; } }
  public bool Initialized { get { int o = __p.__offset(6); return o != 0 ? 0!=__p.bb.Get(o + __p.bb_pos) : (bool)false; } }
  public short Fruit { get { int o = __p.__offset(8); return o != 0 ? __p.bb.GetShort(o + __p.bb_pos) : (short)0; } }
  public string Location { get { int o = __p.__offset(10); return o != 0 ? __p.__string(o + __p.bb_pos) : null; } }
#if ENABLE_SPAN_T
  public Span<byte> GetLocationBytes() { return __p.__vector_as_span<byte>(10, 1); }
#else
  public ArraySegment<byte>? GetLocationBytes() { return __p.__vector_as_arraysegment(10); }
#endif
  public byte[] GetLocationArray() { return __p.__vector_as_array<byte>(10); }

  public static Offset<Benchmark.FBBench.Google.FooBarContainer> CreateFooBarContainer(FlatBufferBuilder builder,
      VectorOffset listOffset = default(VectorOffset),
      bool initialized = false,
      short fruit = 0,
      StringOffset locationOffset = default(StringOffset)) {
    builder.StartTable(4);
    FooBarContainer.AddLocation(builder, locationOffset);
    FooBarContainer.AddList(builder, listOffset);
    FooBarContainer.AddFruit(builder, fruit);
    FooBarContainer.AddInitialized(builder, initialized);
    return FooBarContainer.EndFooBarContainer(builder);
  }

  public static void StartFooBarContainer(FlatBufferBuilder builder) { builder.StartTable(4); }
  public static void AddList(FlatBufferBuilder builder, VectorOffset listOffset) { builder.AddOffset(0, listOffset.Value, 0); }
  public static VectorOffset CreateListVector(FlatBufferBuilder builder, Offset<Benchmark.FBBench.Google.FooBar>[] data) { builder.StartVector(4, data.Length, 4); for (int i = data.Length - 1; i >= 0; i--) builder.AddOffset(data[i].Value); return builder.EndVector(); }
  public static VectorOffset CreateListVectorBlock(FlatBufferBuilder builder, Offset<Benchmark.FBBench.Google.FooBar>[] data) { builder.StartVector(4, data.Length, 4); builder.Add(data); return builder.EndVector(); }
  public static VectorOffset CreateListVectorBlock(FlatBufferBuilder builder, ArraySegment<Offset<Benchmark.FBBench.Google.FooBar>> data) { builder.StartVector(4, data.Count, 4); builder.Add(data); return builder.EndVector(); }
  public static VectorOffset CreateListVectorBlock(FlatBufferBuilder builder, IntPtr dataPtr, int sizeInBytes) { builder.StartVector(1, sizeInBytes, 1); builder.Add<Offset<Benchmark.FBBench.Google.FooBar>>(dataPtr, sizeInBytes); return builder.EndVector(); }
  public static void StartListVector(FlatBufferBuilder builder, int numElems) { builder.StartVector(4, numElems, 4); }
  public static void AddInitialized(FlatBufferBuilder builder, bool initialized) { builder.AddBool(1, initialized, false); }
  public static void AddFruit(FlatBufferBuilder builder, short fruit) { builder.AddShort(2, fruit, 0); }
  public static void AddLocation(FlatBufferBuilder builder, StringOffset locationOffset) { builder.AddOffset(3, locationOffset.Value, 0); }
  public static Offset<Benchmark.FBBench.Google.FooBarContainer> EndFooBarContainer(FlatBufferBuilder builder) {
    int o = builder.EndTable();
    return new Offset<Benchmark.FBBench.Google.FooBarContainer>(o);
  }
  public FooBarContainerT UnPack() {
    var _o = new FooBarContainerT();
    this.UnPackTo(_o);
    return _o;
  }
  public void UnPackTo(FooBarContainerT _o) {
    _o.List = new List<Benchmark.FBBench.Google.FooBarT>();
    for (var _j = 0; _j < this.ListLength; ++_j) {_o.List.Add(this.List(_j).HasValue ? this.List(_j).Value.UnPack() : null);}
    _o.Initialized = this.Initialized;
    _o.Fruit = this.Fruit;
    _o.Location = this.Location;
  }
  public static Offset<Benchmark.FBBench.Google.FooBarContainer> Pack(FlatBufferBuilder builder, FooBarContainerT _o) {
    if (_o == null) return default(Offset<Benchmark.FBBench.Google.FooBarContainer>);
    var _list = default(VectorOffset);
    if (_o.List != null) {
      var __list = new Offset<Benchmark.FBBench.Google.FooBar>[_o.List.Count];
      for (var _j = 0; _j < __list.Length; ++_j) { __list[_j] = Benchmark.FBBench.Google.FooBar.Pack(builder, _o.List[_j]); }
      _list = CreateListVector(builder, __list);
    }
    var _location = _o.Location == null ? default(StringOffset) : builder.CreateString(_o.Location);
    return CreateFooBarContainer(
      builder,
      _list,
      _o.Initialized,
      _o.Fruit,
      _location);
  }
}

public class FooBarContainerT
{
  public List<Benchmark.FBBench.Google.FooBarT> List { get; set; }
  public bool Initialized { get; set; }
  public short Fruit { get; set; }
  public string Location { get; set; }

  public FooBarContainerT() {
    this.List = null;
    this.Initialized = false;
    this.Fruit = 0;
    this.Location = null;
  }
}

public struct SortedVectorContainer : IFlatbufferObject
{
  private Table __p;
  public ByteBuffer ByteBuffer { get { return __p.bb; } }
  public static void ValidateVersion() { FlatBufferConstants.FLATBUFFERS_22_10_26(); }
  public static SortedVectorContainer GetRootAsSortedVectorContainer(ByteBuffer _bb) { return GetRootAsSortedVectorContainer(_bb, new SortedVectorContainer()); }
  public static SortedVectorContainer GetRootAsSortedVectorContainer(ByteBuffer _bb, SortedVectorContainer obj) { return (obj.__assign(_bb.GetInt(_bb.Position) + _bb.Position, _bb)); }
  public void __init(int _i, ByteBuffer _bb) { __p = new Table(_i, _bb); }
  public SortedVectorContainer __assign(int _i, ByteBuffer _bb) { __init(_i, _bb); return this; }

  public Benchmark.FBBench.Google.SortedVectorStringKey? StringVector(int j) { int o = __p.__offset(4); return o != 0 ? (Benchmark.FBBench.Google.SortedVectorStringKey?)(new Benchmark.FBBench.Google.SortedVectorStringKey()).__assign(__p.__indirect(__p.__vector(o) + j * 4), __p.bb) : null; }
  public int StringVectorLength { get { int o = __p.__offset(4); return o != 0 ? __p.__vector_len(o) : 0; } }
  public Benchmark.FBBench.Google.SortedVectorStringKey? StringVectorByKey(string key) { int o = __p.__offset(4); return o != 0 ? Benchmark.FBBench.Google.SortedVectorStringKey.__lookup_by_key(__p.__vector(o), key, __p.bb) : null; }
  public Benchmark.FBBench.Google.SortedVectorIntKey? IntVector(int j) { int o = __p.__offset(6); return o != 0 ? (Benchmark.FBBench.Google.SortedVectorIntKey?)(new Benchmark.FBBench.Google.SortedVectorIntKey()).__assign(__p.__indirect(__p.__vector(o) + j * 4), __p.bb) : null; }
  public int IntVectorLength { get { int o = __p.__offset(6); return o != 0 ? __p.__vector_len(o) : 0; } }
  public Benchmark.FBBench.Google.SortedVectorIntKey? IntVectorByKey(int key) { int o = __p.__offset(6); return o != 0 ? Benchmark.FBBench.Google.SortedVectorIntKey.__lookup_by_key(__p.__vector(o), key, __p.bb) : null; }

  public static Offset<Benchmark.FBBench.Google.SortedVectorContainer> CreateSortedVectorContainer(FlatBufferBuilder builder,
      VectorOffset StringVectorOffset = default(VectorOffset),
      VectorOffset IntVectorOffset = default(VectorOffset)) {
    builder.StartTable(2);
    SortedVectorContainer.AddIntVector(builder, IntVectorOffset);
    SortedVectorContainer.AddStringVector(builder, StringVectorOffset);
    return SortedVectorContainer.EndSortedVectorContainer(builder);
  }

  public static void StartSortedVectorContainer(FlatBufferBuilder builder) { builder.StartTable(2); }
  public static void AddStringVector(FlatBufferBuilder builder, VectorOffset StringVectorOffset) { builder.AddOffset(0, StringVectorOffset.Value, 0); }
  public static VectorOffset CreateStringVectorVector(FlatBufferBuilder builder, Offset<Benchmark.FBBench.Google.SortedVectorStringKey>[] data) { builder.StartVector(4, data.Length, 4); for (int i = data.Length - 1; i >= 0; i--) builder.AddOffset(data[i].Value); return builder.EndVector(); }
  public static VectorOffset CreateStringVectorVectorBlock(FlatBufferBuilder builder, Offset<Benchmark.FBBench.Google.SortedVectorStringKey>[] data) { builder.StartVector(4, data.Length, 4); builder.Add(data); return builder.EndVector(); }
  public static VectorOffset CreateStringVectorVectorBlock(FlatBufferBuilder builder, ArraySegment<Offset<Benchmark.FBBench.Google.SortedVectorStringKey>> data) { builder.StartVector(4, data.Count, 4); builder.Add(data); return builder.EndVector(); }
  public static VectorOffset CreateStringVectorVectorBlock(FlatBufferBuilder builder, IntPtr dataPtr, int sizeInBytes) { builder.StartVector(1, sizeInBytes, 1); builder.Add<Offset<Benchmark.FBBench.Google.SortedVectorStringKey>>(dataPtr, sizeInBytes); return builder.EndVector(); }
  public static void StartStringVectorVector(FlatBufferBuilder builder, int numElems) { builder.StartVector(4, numElems, 4); }
  public static void AddIntVector(FlatBufferBuilder builder, VectorOffset IntVectorOffset) { builder.AddOffset(1, IntVectorOffset.Value, 0); }
  public static VectorOffset CreateIntVectorVector(FlatBufferBuilder builder, Offset<Benchmark.FBBench.Google.SortedVectorIntKey>[] data) { builder.StartVector(4, data.Length, 4); for (int i = data.Length - 1; i >= 0; i--) builder.AddOffset(data[i].Value); return builder.EndVector(); }
  public static VectorOffset CreateIntVectorVectorBlock(FlatBufferBuilder builder, Offset<Benchmark.FBBench.Google.SortedVectorIntKey>[] data) { builder.StartVector(4, data.Length, 4); builder.Add(data); return builder.EndVector(); }
  public static VectorOffset CreateIntVectorVectorBlock(FlatBufferBuilder builder, ArraySegment<Offset<Benchmark.FBBench.Google.SortedVectorIntKey>> data) { builder.StartVector(4, data.Count, 4); builder.Add(data); return builder.EndVector(); }
  public static VectorOffset CreateIntVectorVectorBlock(FlatBufferBuilder builder, IntPtr dataPtr, int sizeInBytes) { builder.StartVector(1, sizeInBytes, 1); builder.Add<Offset<Benchmark.FBBench.Google.SortedVectorIntKey>>(dataPtr, sizeInBytes); return builder.EndVector(); }
  public static void StartIntVectorVector(FlatBufferBuilder builder, int numElems) { builder.StartVector(4, numElems, 4); }
  public static Offset<Benchmark.FBBench.Google.SortedVectorContainer> EndSortedVectorContainer(FlatBufferBuilder builder) {
    int o = builder.EndTable();
    return new Offset<Benchmark.FBBench.Google.SortedVectorContainer>(o);
  }
  public SortedVectorContainerT UnPack() {
    var _o = new SortedVectorContainerT();
    this.UnPackTo(_o);
    return _o;
  }
  public void UnPackTo(SortedVectorContainerT _o) {
    _o.StringVector = new List<Benchmark.FBBench.Google.SortedVectorStringKeyT>();
    for (var _j = 0; _j < this.StringVectorLength; ++_j) {_o.StringVector.Add(this.StringVector(_j).HasValue ? this.StringVector(_j).Value.UnPack() : null);}
    _o.IntVector = new List<Benchmark.FBBench.Google.SortedVectorIntKeyT>();
    for (var _j = 0; _j < this.IntVectorLength; ++_j) {_o.IntVector.Add(this.IntVector(_j).HasValue ? this.IntVector(_j).Value.UnPack() : null);}
  }
  public static Offset<Benchmark.FBBench.Google.SortedVectorContainer> Pack(FlatBufferBuilder builder, SortedVectorContainerT _o) {
    if (_o == null) return default(Offset<Benchmark.FBBench.Google.SortedVectorContainer>);
    var _StringVector = default(VectorOffset);
    if (_o.StringVector != null) {
      var __StringVector = new Offset<Benchmark.FBBench.Google.SortedVectorStringKey>[_o.StringVector.Count];
      for (var _j = 0; _j < __StringVector.Length; ++_j) { __StringVector[_j] = Benchmark.FBBench.Google.SortedVectorStringKey.Pack(builder, _o.StringVector[_j]); }
      _StringVector = CreateStringVectorVector(builder, __StringVector);
    }
    var _IntVector = default(VectorOffset);
    if (_o.IntVector != null) {
      var __IntVector = new Offset<Benchmark.FBBench.Google.SortedVectorIntKey>[_o.IntVector.Count];
      for (var _j = 0; _j < __IntVector.Length; ++_j) { __IntVector[_j] = Benchmark.FBBench.Google.SortedVectorIntKey.Pack(builder, _o.IntVector[_j]); }
      _IntVector = CreateIntVectorVector(builder, __IntVector);
    }
    return CreateSortedVectorContainer(
      builder,
      _StringVector,
      _IntVector);
  }
}

public class SortedVectorContainerT
{
  public List<Benchmark.FBBench.Google.SortedVectorStringKeyT> StringVector { get; set; }
  public List<Benchmark.FBBench.Google.SortedVectorIntKeyT> IntVector { get; set; }

  public SortedVectorContainerT() {
    this.StringVector = null;
    this.IntVector = null;
  }
}

public struct SortedVectorStringKey : IFlatbufferObject
{
  private Table __p;
  public ByteBuffer ByteBuffer { get { return __p.bb; } }
  public static void ValidateVersion() { FlatBufferConstants.FLATBUFFERS_22_10_26(); }
  public static SortedVectorStringKey GetRootAsSortedVectorStringKey(ByteBuffer _bb) { return GetRootAsSortedVectorStringKey(_bb, new SortedVectorStringKey()); }
  public static SortedVectorStringKey GetRootAsSortedVectorStringKey(ByteBuffer _bb, SortedVectorStringKey obj) { return (obj.__assign(_bb.GetInt(_bb.Position) + _bb.Position, _bb)); }
  public void __init(int _i, ByteBuffer _bb) { __p = new Table(_i, _bb); }
  public SortedVectorStringKey __assign(int _i, ByteBuffer _bb) { __init(_i, _bb); return this; }

  public string Key { get { int o = __p.__offset(4); return o != 0 ? __p.__string(o + __p.bb_pos) : null; } }
#if ENABLE_SPAN_T
  public Span<byte> GetKeyBytes() { return __p.__vector_as_span<byte>(4, 1); }
#else
  public ArraySegment<byte>? GetKeyBytes() { return __p.__vector_as_arraysegment(4); }
#endif
  public byte[] GetKeyArray() { return __p.__vector_as_array<byte>(4); }

  public static Offset<Benchmark.FBBench.Google.SortedVectorStringKey> CreateSortedVectorStringKey(FlatBufferBuilder builder,
      StringOffset KeyOffset = default(StringOffset)) {
    builder.StartTable(1);
    SortedVectorStringKey.AddKey(builder, KeyOffset);
    return SortedVectorStringKey.EndSortedVectorStringKey(builder);
  }

  public static void StartSortedVectorStringKey(FlatBufferBuilder builder) { builder.StartTable(1); }
  public static void AddKey(FlatBufferBuilder builder, StringOffset KeyOffset) { builder.AddOffset(0, KeyOffset.Value, 0); }
  public static Offset<Benchmark.FBBench.Google.SortedVectorStringKey> EndSortedVectorStringKey(FlatBufferBuilder builder) {
    int o = builder.EndTable();
    builder.Required(o, 4);  // Key
    return new Offset<Benchmark.FBBench.Google.SortedVectorStringKey>(o);
  }

  public static VectorOffset CreateSortedVectorOfSortedVectorStringKey(FlatBufferBuilder builder, Offset<SortedVectorStringKey>[] offsets) {
    Array.Sort(offsets,
      (Offset<SortedVectorStringKey> o1, Offset<SortedVectorStringKey> o2) =>
        new SortedVectorStringKey().__assign(builder.DataBuffer.Length - o1.Value, builder.DataBuffer).Key.CompareTo(new SortedVectorStringKey().__assign(builder.DataBuffer.Length - o2.Value, builder.DataBuffer).Key));
    return builder.CreateVectorOfTables(offsets);
  }

  public static SortedVectorStringKey? __lookup_by_key(int vectorLocation, string key, ByteBuffer bb) {
    SortedVectorStringKey obj_ = new SortedVectorStringKey();
    int span = bb.GetInt(vectorLocation - 4);
    int start = 0;
    while (span != 0) {
      int middle = span / 2;
      int tableOffset = Table.__indirect(vectorLocation + 4 * (start + middle), bb);
      obj_.__assign(tableOffset, bb);
      int comp = obj_.Key.CompareTo(key);
      if (comp > 0) {
        span = middle;
      } else if (comp < 0) {
        middle++;
        start += middle;
        span -= middle;
      } else {
        return obj_;
      }
    }
    return null;
  }
  public SortedVectorStringKeyT UnPack() {
    var _o = new SortedVectorStringKeyT();
    this.UnPackTo(_o);
    return _o;
  }
  public void UnPackTo(SortedVectorStringKeyT _o) {
    _o.Key = this.Key;
  }
  public static Offset<Benchmark.FBBench.Google.SortedVectorStringKey> Pack(FlatBufferBuilder builder, SortedVectorStringKeyT _o) {
    if (_o == null) return default(Offset<Benchmark.FBBench.Google.SortedVectorStringKey>);
    var _Key = _o.Key == null ? default(StringOffset) : builder.CreateString(_o.Key);
    return CreateSortedVectorStringKey(
      builder,
      _Key);
  }
}

public class SortedVectorStringKeyT
{
  public string Key { get; set; }

  public SortedVectorStringKeyT() {
    this.Key = null;
  }
}

public struct SortedVectorIntKey : IFlatbufferObject
{
  private Table __p;
  public ByteBuffer ByteBuffer { get { return __p.bb; } }
  public static void ValidateVersion() { FlatBufferConstants.FLATBUFFERS_22_10_26(); }
  public static SortedVectorIntKey GetRootAsSortedVectorIntKey(ByteBuffer _bb) { return GetRootAsSortedVectorIntKey(_bb, new SortedVectorIntKey()); }
  public static SortedVectorIntKey GetRootAsSortedVectorIntKey(ByteBuffer _bb, SortedVectorIntKey obj) { return (obj.__assign(_bb.GetInt(_bb.Position) + _bb.Position, _bb)); }
  public void __init(int _i, ByteBuffer _bb) { __p = new Table(_i, _bb); }
  public SortedVectorIntKey __assign(int _i, ByteBuffer _bb) { __init(_i, _bb); return this; }

  public int Key { get { int o = __p.__offset(4); return o != 0 ? __p.bb.GetInt(o + __p.bb_pos) : (int)0; } }

  public static Offset<Benchmark.FBBench.Google.SortedVectorIntKey> CreateSortedVectorIntKey(FlatBufferBuilder builder,
      int Key = 0) {
    builder.StartTable(1);
    SortedVectorIntKey.AddKey(builder, Key);
    return SortedVectorIntKey.EndSortedVectorIntKey(builder);
  }

  public static void StartSortedVectorIntKey(FlatBufferBuilder builder) { builder.StartTable(1); }
  public static void AddKey(FlatBufferBuilder builder, int Key) { builder.AddInt(0, Key, 0); }
  public static Offset<Benchmark.FBBench.Google.SortedVectorIntKey> EndSortedVectorIntKey(FlatBufferBuilder builder) {
    int o = builder.EndTable();
    return new Offset<Benchmark.FBBench.Google.SortedVectorIntKey>(o);
  }

  public static VectorOffset CreateSortedVectorOfSortedVectorIntKey(FlatBufferBuilder builder, Offset<SortedVectorIntKey>[] offsets) {
    Array.Sort(offsets,
      (Offset<SortedVectorIntKey> o1, Offset<SortedVectorIntKey> o2) =>
        new SortedVectorIntKey().__assign(builder.DataBuffer.Length - o1.Value, builder.DataBuffer).Key.CompareTo(new SortedVectorIntKey().__assign(builder.DataBuffer.Length - o2.Value, builder.DataBuffer).Key));
    return builder.CreateVectorOfTables(offsets);
  }

  public static SortedVectorIntKey? __lookup_by_key(int vectorLocation, int key, ByteBuffer bb) {
    SortedVectorIntKey obj_ = new SortedVectorIntKey();
    int span = bb.GetInt(vectorLocation - 4);
    int start = 0;
    while (span != 0) {
      int middle = span / 2;
      int tableOffset = Table.__indirect(vectorLocation + 4 * (start + middle), bb);
      obj_.__assign(tableOffset, bb);
      int comp = obj_.Key.CompareTo(key);
      if (comp > 0) {
        span = middle;
      } else if (comp < 0) {
        middle++;
        start += middle;
        span -= middle;
      } else {
        return obj_;
      }
    }
    return null;
  }
  public SortedVectorIntKeyT UnPack() {
    var _o = new SortedVectorIntKeyT();
    this.UnPackTo(_o);
    return _o;
  }
  public void UnPackTo(SortedVectorIntKeyT _o) {
    _o.Key = this.Key;
  }
  public static Offset<Benchmark.FBBench.Google.SortedVectorIntKey> Pack(FlatBufferBuilder builder, SortedVectorIntKeyT _o) {
    if (_o == null) return default(Offset<Benchmark.FBBench.Google.SortedVectorIntKey>);
    return CreateSortedVectorIntKey(
      builder,
      _o.Key);
  }
}

public class SortedVectorIntKeyT
{
  public int Key { get; set; }

  public SortedVectorIntKeyT() {
    this.Key = 0;
  }
}


}
