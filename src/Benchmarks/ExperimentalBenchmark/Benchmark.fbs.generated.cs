
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by the FlatSharp FBS to C# compiler (source hash: 5.3.1.Y1lwkayl8obqKLvHQB1QPjbqEp8P2CTYYev0A5Owcf4=)
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.Collections.Generic;
using System.Linq;
using System.Runtime.CompilerServices;
using FlatSharp;
using FlatSharp.Attributes;
#pragma warning disable 0618
#nullable enable
namespace FlatSharp.Compiler.Generated
{
    internal static class CloneHelpers_6ab94cc48e69492886ed55b89ae47c46
    {
        [System.Runtime.CompilerServices.MethodImplAttribute(System.Runtime.CompilerServices.MethodImplOptions.AggressiveInlining)]
        public static BenchmarkCore.Normal Clone(BenchmarkCore.Normal item)
        {
            checked
            {
                return item;
            }
        }

        [System.Runtime.CompilerServices.MethodImplAttribute(System.Runtime.CompilerServices.MethodImplOptions.AggressiveInlining)]
        public static System.Byte Clone(System.Byte item)
        {
            checked
            {
                return item;
            }
        }

        [System.Runtime.CompilerServices.MethodImplAttribute(System.Runtime.CompilerServices.MethodImplOptions.AggressiveInlining)]
        public static BenchmarkCore.Flags Clone(BenchmarkCore.Flags item)
        {
            checked
            {
                return item;
            }
        }

        [return: System.Diagnostics.CodeAnalysis.NotNullIfNotNull("item")]
        [System.Runtime.CompilerServices.MethodImplAttribute(System.Runtime.CompilerServices.MethodImplOptions.AggressiveInlining)]
        public static BenchmarkCore.SomeTable? Clone(BenchmarkCore.SomeTable? item)
        {
            checked
            {
                return item is null ? null : new BenchmarkCore.SomeTable(item);
            }
        }

        [return: System.Diagnostics.CodeAnalysis.NotNullIfNotNull("item")]
        [System.Runtime.CompilerServices.MethodImplAttribute(System.Runtime.CompilerServices.MethodImplOptions.AggressiveInlining)]
        public static BenchmarkCore.Struct? Clone(BenchmarkCore.Struct? item)
        {
            checked
            {
                return item is null ? null : new BenchmarkCore.Struct(item);
            }
        }

        [return: System.Diagnostics.CodeAnalysis.NotNullIfNotNull("item")]
        [System.Runtime.CompilerServices.MethodImplAttribute(System.Runtime.CompilerServices.MethodImplOptions.AggressiveInlining)]
        public static BenchmarkCore.OtherStruct? Clone(BenchmarkCore.OtherStruct? item)
        {
            checked
            {
                return item is null ? null : new BenchmarkCore.OtherStruct(item);
            }
        }

        [System.Runtime.CompilerServices.MethodImplAttribute(System.Runtime.CompilerServices.MethodImplOptions.AggressiveInlining)]
        public static System.Int64 Clone(System.Int64 item)
        {
            checked
            {
                return item;
            }
        }

        [System.Runtime.CompilerServices.MethodImplAttribute(System.Runtime.CompilerServices.MethodImplOptions.AggressiveInlining)]
        public static System.Int32 Clone(System.Int32 item)
        {
            checked
            {
                return item;
            }
        }
    }

}

namespace BenchmarkCore
{
    [FlatBufferEnum(typeof(System.Byte))]
    [System.Runtime.CompilerServices.CompilerGenerated]
    public enum Normal : System.Byte
    {
        A = (byte)(0),
        B = (byte)(1),
        C = (byte)(2),
        D = (byte)(3),
    }

    [FlatBufferEnum(typeof(System.Byte))]
    [System.Runtime.CompilerServices.CompilerGenerated]
    [System.Flags]
    public enum Flags : System.Byte
    {
        A = (byte)(1),
        B = (byte)(2),
        C = (byte)(4),
        D = (byte)(8),
        None = (byte)(0),
        All = (byte)(15),
    }

    [FlatBufferTable]
    [System.Runtime.CompilerServices.CompilerGenerated]
    public partial class SomeTable
        : object
        , IFlatBufferSerializable<SomeTable>
    {
        public SomeTable()
        {
            checked
            {
                this.Struct = null!;
                this.OnInitialized(null);
            }
        }

#pragma warning disable CS8618
        protected SomeTable(FlatBufferDeserializationContext context)
        {
            checked
            {
            }
        }

#pragma warning restore CS8618
        public SomeTable(SomeTable source)
        {
            checked
            {
                this.Struct = FlatSharp.Compiler.Generated.CloneHelpers_6ab94cc48e69492886ed55b89ae47c46.Clone(source.Struct);
                this.OnInitialized(null);
            }
        }

        partial void OnInitialized(FlatBufferDeserializationContext? context);

        protected void OnFlatSharpDeserialized(FlatBufferDeserializationContext? context) => this.OnInitialized(context);

        [FlatBufferItemAttribute(0, Required = true)]
        public virtual global::BenchmarkCore.Struct Struct { get; set; }

        public static ISerializer<BenchmarkCore.SomeTable> Serializer { get; } = new GeneratedSerializer().AsISerializer();

        ISerializer IFlatBufferSerializable.Serializer => Serializer;
        ISerializer<BenchmarkCore.SomeTable> IFlatBufferSerializable<BenchmarkCore.SomeTable>.Serializer => Serializer;

        #region Serializer for BenchmarkCore.SomeTable

        [FlatSharpGeneratedSerializerAttribute(FlatBufferDeserializationOption.VectorCacheMutable)]
        private sealed class GeneratedSerializer : IGeneratedSerializer<BenchmarkCore.SomeTable>
        {
            // Method generated to help AOT compilers make good decisions about generics.
            public void __AotHelper()
            {
                checked
                {
                    this.Write<ISpanWriter>(default!, new byte[10], default!, default!, default!);
                    this.Write<SpanWriter>(default!, new byte[10], default!, default!, default!);

                    this.Parse<IInputBuffer>(default!, 0);
                    this.Parse<MemoryInputBuffer.Wrapper>(default!, 0);
                    this.Parse<MemoryInputBuffer>(default!, 0);
                    this.Parse<ReadOnlyMemoryInputBuffer.Wrapper>(default!, 0);
                    this.Parse<ReadOnlyMemoryInputBuffer>(default!, 0);
                    this.Parse<ArrayInputBuffer.Wrapper>(default!, 0);
                    this.Parse<ArrayInputBuffer>(default!, 0);

#if FLATSHARP_UNSAFE
                        this.Parse<FlatSharp.Unsafe.UnsafeArrayInputBuffer>(default!, 0);
                        this.Parse<FlatSharp.Unsafe.UnsafeArrayInputBuffer.Wrapper>(default!, 0);
                        this.Parse<FlatSharp.Unsafe.UnsafeMemoryInputBuffer>(default!, 0);
                        this.Parse<FlatSharp.Unsafe.UnsafeMemoryInputBuffer.Wrapper>(default!, 0);
                        this.Write<FlatSharp.Unsafe.UnsafeSpanWriter>(default!, new byte[10], default!, default!, default!);
                        this.Write<FlatSharp.Unsafe.UnsafeSpanWriter.Wrapper>(default!, new byte[10], default!, default!, default!);
#endif

                    throw new InvalidOperationException("__AotHelper is not intended to be invoked");
                }
            }

            public void Write<TSpanWriter>(TSpanWriter writer, Span<byte> target, BenchmarkCore.SomeTable root, int offset, SerializationContext context)
                where TSpanWriter : ISpanWriter
            {
                checked
                {
                    WriteInlineValueOf_39c9846cd2704595976480420ff5fe17(writer, target, root, offset, context);
                }
            }

            public int GetMaxSize(BenchmarkCore.SomeTable root)
            {
                checked
                {
                    return GetMaxSizeOf_39c9846cd2704595976480420ff5fe17(root);
                }
            }

            public BenchmarkCore.SomeTable Parse<TInputBuffer>(TInputBuffer buffer, int offset)
                where TInputBuffer : IInputBuffer
            {
                checked
                {
                    return Read_39c9846cd2704595976480420ff5fe17(buffer, offset);
                }
            }

            private static int GetMaxSizeOf_39c9846cd2704595976480420ff5fe17(BenchmarkCore.SomeTable value)
            {
                checked
                {

                    int runningSum = 26 + 7;
                    ;
                    return runningSum;

                }
            }

            private static BenchmarkCore.SomeTable Read_39c9846cd2704595976480420ff5fe17<TInputBuffer>(
                TInputBuffer buffer,
                int offset) where TInputBuffer : IInputBuffer
            {
                checked
                {
                    return new tableReader_6f77f0981ff040a9a2aed4f0f80f2fa5<TInputBuffer>(buffer, offset + buffer.ReadUOffset(offset));
                }
            }

            private sealed class tableReader_6f77f0981ff040a9a2aed4f0f80f2fa5<TInputBuffer>
                : BenchmarkCore.SomeTable
                , FlatSharp.IFlatBufferDeserializedObject
                where TInputBuffer : IInputBuffer
            {
                private static readonly FlatSharp.FlatBufferDeserializationContext __CtorContext
                    = new FlatSharp.FlatBufferDeserializationContext(FlatSharp.FlatBufferDeserializationOption.VectorCacheMutable);

                private readonly TInputBuffer __buffer;
                private readonly int __offset;
                private readonly int __vtableOffset;
                private readonly int __vtableMaxIndex;
                private BenchmarkCore.Struct __index0Value;
                private byte __mask0;

                public tableReader_6f77f0981ff040a9a2aed4f0f80f2fa5(TInputBuffer buffer, int offset) : base(__CtorContext)
                {
                    checked
                    {
                        this.__buffer = buffer;
                        this.__offset = offset;
                        buffer.InitializeVTable(offset, out var __vtableLocation, out var __vtableMaxIndex);
                        this.__vtableOffset = __vtableLocation;
                        this.__vtableMaxIndex = __vtableMaxIndex;
                        this.__index0Value = null!;
                        base.OnFlatSharpDeserialized(__CtorContext);
                    }
                }

                System.Type IFlatBufferDeserializedObject.TableOrStructType => typeof(BenchmarkCore.SomeTable);
                FlatSharp.FlatBufferDeserializationContext IFlatBufferDeserializedObject.DeserializationContext => __CtorContext;
                FlatSharp.IInputBuffer? IFlatBufferDeserializedObject.InputBuffer => this.__buffer;


                public override BenchmarkCore.Struct Struct
                {
                    get
                    {
                        checked
                        {

                            if ((this.__mask0 & (byte)1) == 0)
                            {
                                this.__index0Value = ReadIndex0Value(this.__buffer, this.__offset, this.__vtableOffset, this.__vtableMaxIndex);
                                this.__mask0 |= (byte)1;
                            }
                            return this.__index0Value;

                        }
                    }

                    set
                    {
                        checked
                        { this.__index0Value = value; this.__mask0 |= (byte)1; }
                    }
                }


                [System.Runtime.CompilerServices.MethodImplAttribute(System.Runtime.CompilerServices.MethodImplOptions.AggressiveInlining)]
                private static BenchmarkCore.Struct ReadIndex0Value(
                    TInputBuffer buffer,
                    int offset,
                    int vtableOffset,
                    int maxVtableIndex)
                {
                    checked
                    {

                        if (0 > maxVtableIndex)
                        {
                            throw new System.IO.InvalidDataException("Table property 'BenchmarkCore.SomeTable.Struct' was marked as required, but was missing from the buffer.");
                        }

                        ushort relativeOffset = buffer.ReadUShort(vtableOffset + 4);
                        if (relativeOffset == 0)
                        {
                            throw new System.IO.InvalidDataException("Table property 'BenchmarkCore.SomeTable.Struct' was marked as required, but was missing from the buffer.");
                        }

                        int absoluteLocation = offset + relativeOffset;
                        return Read_9e99ed5c0941490fa9370acc9b2cfe00(buffer, absoluteLocation); ;
                    }
                }
            }



            private static void WriteInlineValueOf_39c9846cd2704595976480420ff5fe17<TSpanWriter>(
                TSpanWriter spanWriter,
                Span<byte> span,
                BenchmarkCore.SomeTable value,
                int offset
                , SerializationContext context) where TSpanWriter : ISpanWriter
            {
                checked
                {

                    int tableStart = context.AllocateSpace(23, sizeof(int));
                    spanWriter.WriteUOffset(span, offset, tableStart);
                    int currentOffset = tableStart + sizeof(int); // skip past vtable soffset_t.

                    int vtableLength = 6;
                    Span<byte> vtable = stackalloc byte[6];

                    var index0Value = value.Struct;

                    var index0Offset = tableStart;
                    if (!(index0Value is null))
                    {

                        currentOffset += SerializationHelpers.GetAlignmentError(currentOffset, 8);
                        index0Offset = currentOffset;
                        currentOffset += 12;


                        WriteInlineValueOf_9e99ed5c0941490fa9370acc9b2cfe00(spanWriter, span, index0Value!, index0Offset);


                    }
                    else
                    {
                        throw new System.InvalidOperationException("Table property 'BenchmarkCore.SomeTable.Struct' is marked as required, but was not set.");
                    }

                    spanWriter.WriteUShort(vtable, (ushort)(index0Offset - tableStart), 4);
                    int tableLength = currentOffset - tableStart;
                    context.Offset -= 23 - tableLength;
                    spanWriter.WriteUShort(vtable, (ushort)vtableLength, 0);
                    spanWriter.WriteUShort(vtable, (ushort)tableLength, sizeof(ushort));
                    int vtablePosition = context.FinishVTable(span, vtable.Slice(0, vtableLength));
                    spanWriter.WriteInt(span, tableStart - vtablePosition, tableStart);
                }
            }

            [System.Runtime.CompilerServices.MethodImplAttribute(System.Runtime.CompilerServices.MethodImplOptions.AggressiveInlining)]
            private static int GetMaxSizeOf_9e99ed5c0941490fa9370acc9b2cfe00(BenchmarkCore.Struct value)
            {
                checked
                {
                    return 19;
                }
            }

            private static BenchmarkCore.Struct Read_9e99ed5c0941490fa9370acc9b2cfe00<TInputBuffer>(
                TInputBuffer buffer,
                int offset) where TInputBuffer : IInputBuffer
            {
                checked
                {
                    return new structReader_bde6d72f4f7c44dcb2cd1a021831bc1d<TInputBuffer>(buffer, offset);
                }
            }

            private sealed class structReader_bde6d72f4f7c44dcb2cd1a021831bc1d<TInputBuffer>
                : BenchmarkCore.Struct
                , FlatSharp.IFlatBufferDeserializedObject
                where TInputBuffer : IInputBuffer
            {
                private static readonly FlatSharp.FlatBufferDeserializationContext __CtorContext
                    = new FlatSharp.FlatBufferDeserializationContext(FlatSharp.FlatBufferDeserializationOption.VectorCacheMutable);

                private readonly TInputBuffer __buffer;
                private readonly int __offset;
                private BenchmarkCore.OtherStruct __index0Value;
                private System.Int32 __index1Value;
                private byte __mask0;

                public structReader_bde6d72f4f7c44dcb2cd1a021831bc1d(TInputBuffer buffer, int offset) : base(__CtorContext)
                {
                    checked
                    {
                        this.__buffer = buffer;
                        this.__offset = offset;
                        this.__index0Value = null!;
                        base.OnFlatSharpDeserialized(__CtorContext);
                    }
                }

                System.Type IFlatBufferDeserializedObject.TableOrStructType => typeof(BenchmarkCore.Struct);
                FlatSharp.FlatBufferDeserializationContext IFlatBufferDeserializedObject.DeserializationContext => __CtorContext;
                FlatSharp.IInputBuffer? IFlatBufferDeserializedObject.InputBuffer => this.__buffer;


                public override BenchmarkCore.OtherStruct Other
                {
                    get
                    {
                        checked
                        {

                            if ((this.__mask0 & (byte)1) == 0)
                            {
                                this.__index0Value = ReadIndex0Value(this.__buffer, this.__offset, default, default);
                                this.__mask0 |= (byte)1;
                            }
                            return this.__index0Value;

                        }
                    }

                    set
                    {
                        checked
                        { this.__index0Value = value; this.__mask0 |= (byte)1; WriteIndex0Value(this.__buffer, __offset, value); }
                    }
                }

                public override System.Int32 Int
                {
                    get
                    {
                        checked
                        {

                            if ((this.__mask0 & (byte)2) == 0)
                            {
                                this.__index1Value = ReadIndex1Value(this.__buffer, this.__offset, default, default);
                                this.__mask0 |= (byte)2;
                            }
                            return this.__index1Value;

                        }
                    }

                    set
                    {
                        checked
                        { this.__index1Value = value; this.__mask0 |= (byte)2; WriteIndex1Value(this.__buffer, __offset, value); }
                    }
                }


                [System.Runtime.CompilerServices.MethodImplAttribute(System.Runtime.CompilerServices.MethodImplOptions.AggressiveInlining)]
                private static BenchmarkCore.OtherStruct ReadIndex0Value(
                    TInputBuffer buffer,
                    int offset,
                    int vtableOffset,
                    int maxVtableIndex)
                {
                    checked
                    {
                        return Read_917d5b4338d9430da8488746f40cc37b(buffer, offset + 0); ;
                    }
                }

                [System.Runtime.CompilerServices.MethodImplAttribute(System.Runtime.CompilerServices.MethodImplOptions.AggressiveInlining)]
                private static void WriteIndex0Value(
                    TInputBuffer buffer,
                    int offset,
                    BenchmarkCore.OtherStruct value)
                {
                    checked
                    {

                        WriteInlineValueOf_917d5b4338d9430da8488746f40cc37b(
                            default(SpanWriter),
                            buffer.GetByteMemory(0, buffer.Length).Span,
                            value,
                            offset + 0);
                    }
                }

                [System.Runtime.CompilerServices.MethodImplAttribute(System.Runtime.CompilerServices.MethodImplOptions.AggressiveInlining)]
                private static System.Int32 ReadIndex1Value(
                    TInputBuffer buffer,
                    int offset,
                    int vtableOffset,
                    int maxVtableIndex)
                {
                    checked
                    {
                        return Read_163ab6c981104e12b9da70f06a440930(buffer, offset + 8); ;
                    }
                }

                [System.Runtime.CompilerServices.MethodImplAttribute(System.Runtime.CompilerServices.MethodImplOptions.AggressiveInlining)]
                private static void WriteIndex1Value(
                    TInputBuffer buffer,
                    int offset,
                    System.Int32 value)
                {
                    checked
                    {

                        WriteInlineValueOf_163ab6c981104e12b9da70f06a440930(
                            default(SpanWriter),
                            buffer.GetByteMemory(0, buffer.Length).Span,
                            value,
                            offset + 8);
                    }
                }
            }



            private static void WriteInlineValueOf_9e99ed5c0941490fa9370acc9b2cfe00<TSpanWriter>(
                TSpanWriter spanWriter,
                Span<byte> span,
                BenchmarkCore.Struct value,
                int offset
                ) where TSpanWriter : ISpanWriter
            {
                checked
                {
                    Span<byte> scopedSpan = span.Slice(offset, 12);

                    if (value is null)
                    {
                        scopedSpan.Clear();
                        return;
                    }

                    WriteInlineValueOf_917d5b4338d9430da8488746f40cc37b(spanWriter, scopedSpan, value.Other, 0);
                    WriteInlineValueOf_163ab6c981104e12b9da70f06a440930(spanWriter, scopedSpan, value.Int, 8);
                }
            }

            [System.Runtime.CompilerServices.MethodImplAttribute(System.Runtime.CompilerServices.MethodImplOptions.AggressiveInlining)]
            private static int GetMaxSizeOf_917d5b4338d9430da8488746f40cc37b(BenchmarkCore.OtherStruct value)
            {
                checked
                {
                    return 15;
                }
            }

            private static BenchmarkCore.OtherStruct Read_917d5b4338d9430da8488746f40cc37b<TInputBuffer>(
                TInputBuffer buffer,
                int offset) where TInputBuffer : IInputBuffer
            {
                checked
                {
                    return new structReader_bf4cb85a793c469f9795c4f9c2ec7474<TInputBuffer>(buffer, offset);
                }
            }

            private sealed class structReader_bf4cb85a793c469f9795c4f9c2ec7474<TInputBuffer>
                : BenchmarkCore.OtherStruct
                , FlatSharp.IFlatBufferDeserializedObject
                where TInputBuffer : IInputBuffer
            {
                private static readonly FlatSharp.FlatBufferDeserializationContext __CtorContext
                    = new FlatSharp.FlatBufferDeserializationContext(FlatSharp.FlatBufferDeserializationOption.VectorCacheMutable);

                private readonly TInputBuffer __buffer;
                private readonly int __offset;
                private System.Int64 __index0Value;
                private byte __mask0;

                public structReader_bf4cb85a793c469f9795c4f9c2ec7474(TInputBuffer buffer, int offset) : base(__CtorContext)
                {
                    checked
                    {
                        this.__buffer = buffer;
                        this.__offset = offset;
                        base.OnFlatSharpDeserialized(__CtorContext);
                    }
                }

                System.Type IFlatBufferDeserializedObject.TableOrStructType => typeof(BenchmarkCore.OtherStruct);
                FlatSharp.FlatBufferDeserializationContext IFlatBufferDeserializedObject.DeserializationContext => __CtorContext;
                FlatSharp.IInputBuffer? IFlatBufferDeserializedObject.InputBuffer => this.__buffer;


                public override System.Int64 Long
                {
                    get
                    {
                        checked
                        {

                            if ((this.__mask0 & (byte)1) == 0)
                            {
                                this.__index0Value = ReadIndex0Value(this.__buffer, this.__offset, default, default);
                                this.__mask0 |= (byte)1;
                            }
                            return this.__index0Value;

                        }
                    }

                    set
                    {
                        checked
                        { this.__index0Value = value; this.__mask0 |= (byte)1; WriteIndex0Value(this.__buffer, __offset, value); }
                    }
                }


                [System.Runtime.CompilerServices.MethodImplAttribute(System.Runtime.CompilerServices.MethodImplOptions.AggressiveInlining)]
                private static System.Int64 ReadIndex0Value(
                    TInputBuffer buffer,
                    int offset,
                    int vtableOffset,
                    int maxVtableIndex)
                {
                    checked
                    {
                        return Read_b8980c660c6a48ab92f1843a5c0a7dbc(buffer, offset + 0); ;
                    }
                }

                [System.Runtime.CompilerServices.MethodImplAttribute(System.Runtime.CompilerServices.MethodImplOptions.AggressiveInlining)]
                private static void WriteIndex0Value(
                    TInputBuffer buffer,
                    int offset,
                    System.Int64 value)
                {
                    checked
                    {

                        WriteInlineValueOf_b8980c660c6a48ab92f1843a5c0a7dbc(
                            default(SpanWriter),
                            buffer.GetByteMemory(0, buffer.Length).Span,
                            value,
                            offset + 0);
                    }
                }
            }



            private static void WriteInlineValueOf_917d5b4338d9430da8488746f40cc37b<TSpanWriter>(
                TSpanWriter spanWriter,
                Span<byte> span,
                BenchmarkCore.OtherStruct value,
                int offset
                ) where TSpanWriter : ISpanWriter
            {
                checked
                {
                    Span<byte> scopedSpan = span.Slice(offset, 8);

                    if (value is null)
                    {
                        scopedSpan.Clear();
                        return;
                    }

                    WriteInlineValueOf_b8980c660c6a48ab92f1843a5c0a7dbc(spanWriter, scopedSpan, value.Long, 0);
                }
            }

            [System.Runtime.CompilerServices.MethodImplAttribute(System.Runtime.CompilerServices.MethodImplOptions.AggressiveInlining)]
            private static int GetMaxSizeOf_b8980c660c6a48ab92f1843a5c0a7dbc(System.Int64 value)
            {
                checked
                {
                    return 15;
                }
            }

            [System.Runtime.CompilerServices.MethodImplAttribute(System.Runtime.CompilerServices.MethodImplOptions.AggressiveInlining)]
            private static System.Int64 Read_b8980c660c6a48ab92f1843a5c0a7dbc<TInputBuffer>(
                TInputBuffer buffer,
                int offset) where TInputBuffer : IInputBuffer
            {
                checked
                {
                    return buffer.ReadLong(offset);
                }
            }

            [MethodImpl(MethodImplOptions.AggressiveInlining)]
            private static void WriteInlineValueOf_b8980c660c6a48ab92f1843a5c0a7dbc<TSpanWriter>(
                TSpanWriter spanWriter,
                Span<byte> span,
                System.Int64 value,
                int offset
                ) where TSpanWriter : ISpanWriter
            {
                checked
                {
                    spanWriter.WriteLong(span, value, offset);
                }
            }

            [System.Runtime.CompilerServices.MethodImplAttribute(System.Runtime.CompilerServices.MethodImplOptions.AggressiveInlining)]
            private static int GetMaxSizeOf_163ab6c981104e12b9da70f06a440930(System.Int32 value)
            {
                checked
                {
                    return 7;
                }
            }

            [System.Runtime.CompilerServices.MethodImplAttribute(System.Runtime.CompilerServices.MethodImplOptions.AggressiveInlining)]
            private static System.Int32 Read_163ab6c981104e12b9da70f06a440930<TInputBuffer>(
                TInputBuffer buffer,
                int offset) where TInputBuffer : IInputBuffer
            {
                checked
                {
                    return buffer.ReadInt(offset);
                }
            }

            [MethodImpl(MethodImplOptions.AggressiveInlining)]
            private static void WriteInlineValueOf_163ab6c981104e12b9da70f06a440930<TSpanWriter>(
                TSpanWriter spanWriter,
                Span<byte> span,
                System.Int32 value,
                int offset
                ) where TSpanWriter : ISpanWriter
            {
                checked
                {
                    spanWriter.WriteInt(span, value, offset);
                }
            }
        }

        #endregion
    }
    [FlatBufferStruct]
    [System.Runtime.CompilerServices.CompilerGenerated]
    public partial class Struct
        : object
    {
        public Struct()
        {
            checked
            {
                this.Other = new BenchmarkCore.OtherStruct();
                this.OnInitialized(null);
            }
        }

#pragma warning disable CS8618
        protected Struct(FlatBufferDeserializationContext context)
        {
            checked
            {
            }
        }

#pragma warning restore CS8618
        public Struct(Struct source)
        {
            checked
            {
                this.Other = FlatSharp.Compiler.Generated.CloneHelpers_6ab94cc48e69492886ed55b89ae47c46.Clone(source.Other);
                this.Int = FlatSharp.Compiler.Generated.CloneHelpers_6ab94cc48e69492886ed55b89ae47c46.Clone(source.Int);
                this.OnInitialized(null);
            }
        }

        partial void OnInitialized(FlatBufferDeserializationContext? context);

        protected void OnFlatSharpDeserialized(FlatBufferDeserializationContext? context) => this.OnInitialized(context);

        [FlatBufferItemAttribute(0, WriteThrough = true)]
        public virtual global::BenchmarkCore.OtherStruct Other { get; set; }

        [FlatBufferItemAttribute(1, WriteThrough = true)]
        public virtual System.Int32 Int { get; set; }

    }
    [FlatBufferStruct]
    [System.Runtime.CompilerServices.CompilerGenerated]
    public partial class OtherStruct
        : object
    {
        public OtherStruct()
        {
            checked
            {
                this.OnInitialized(null);
            }
        }

#pragma warning disable CS8618
        protected OtherStruct(FlatBufferDeserializationContext context)
        {
            checked
            {
            }
        }

#pragma warning restore CS8618
        public OtherStruct(OtherStruct source)
        {
            checked
            {
                this.Long = FlatSharp.Compiler.Generated.CloneHelpers_6ab94cc48e69492886ed55b89ae47c46.Clone(source.Long);
                this.OnInitialized(null);
            }
        }

        partial void OnInitialized(FlatBufferDeserializationContext? context);

        protected void OnFlatSharpDeserialized(FlatBufferDeserializationContext? context) => this.OnInitialized(context);

        [FlatBufferItemAttribute(0, WriteThrough = true)]
        public virtual System.Int64 Long { get; set; }

    }
}
#nullable restore
#pragma warning restore 0618
