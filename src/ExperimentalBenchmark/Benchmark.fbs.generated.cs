
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by the FlatSharp FBS to C# compiler (source hash: 5.2.1.WFF1aUhCVW6S/H4ABgrEw94REZ0IHBSWawCwYTqbZKA=)
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.Collections.Generic;
using System.Linq;
using System.Runtime.CompilerServices;
using FlatSharp;
using FlatSharp.Attributes;
#pragma warning disable 0618
#nullable enable annotations
namespace FlatSharp.Compiler.Generated
{
    internal static class CloneHelpers_333b1ab44c624c3585d66eae70966232
    {
        [System.Runtime.CompilerServices.MethodImplAttribute(System.Runtime.CompilerServices.MethodImplOptions.AggressiveInlining)]
        public static BenchmarkCore.SomeTable? Clone(BenchmarkCore.SomeTable? item)
        {
            checked
            {
                return item is null ? null : new BenchmarkCore.SomeTable(item);
            }
        }

        [System.Runtime.CompilerServices.MethodImplAttribute(System.Runtime.CompilerServices.MethodImplOptions.AggressiveInlining)]
        public static BenchmarkCore.Struct? Clone(BenchmarkCore.Struct? item)
        {
            checked
            {
                return item is null ? null : new BenchmarkCore.Struct(item);
            }
        }

        [System.Runtime.CompilerServices.MethodImplAttribute(System.Runtime.CompilerServices.MethodImplOptions.AggressiveInlining)]
        public static BenchmarkCore.OtherStruct? Clone(BenchmarkCore.OtherStruct? item)
        {
            checked
            {
                return item is null ? null : new BenchmarkCore.OtherStruct(item);
            }
        }

        [System.Runtime.CompilerServices.MethodImplAttribute(System.Runtime.CompilerServices.MethodImplOptions.AggressiveInlining)]
        public static System.Int64 Clone(System.Int64 item)
        {
            checked
            {
                return item;
            }
        }

        [System.Runtime.CompilerServices.MethodImplAttribute(System.Runtime.CompilerServices.MethodImplOptions.AggressiveInlining)]
        public static System.Int32 Clone(System.Int32 item)
        {
            checked
            {
                return item;
            }
        }
    }

}

namespace BenchmarkCore
{
    [FlatBufferTable]
    [System.Runtime.CompilerServices.CompilerGenerated]
    public partial class SomeTable
        : object
        , IFlatBufferSerializable<SomeTable>
    {
        public SomeTable()
        {
            checked
            {
                this.OnInitialized(null);
            }
        }

#pragma warning disable CS8618
        protected SomeTable(FlatBufferDeserializationContext context)
        {
            checked
            {
            }
        }

#pragma warning restore CS8618
        public SomeTable(SomeTable source)
        {
            checked
            {
                this.Struct = FlatSharp.Compiler.Generated.CloneHelpers_333b1ab44c624c3585d66eae70966232.Clone(source.Struct);
                this.OnInitialized(null);
            }
        }

        partial void OnInitialized(FlatBufferDeserializationContext? context);

        protected void OnFlatSharpDeserialized(FlatBufferDeserializationContext? context) => this.OnInitialized(context);

        [FlatBufferItemAttribute(0)]
        public virtual global::BenchmarkCore.Struct? Struct { get; set; }

        public static ISerializer<BenchmarkCore.SomeTable> Serializer { get; } = new GeneratedSerializer().AsISerializer();

        ISerializer IFlatBufferSerializable.Serializer => Serializer;
        ISerializer<BenchmarkCore.SomeTable> IFlatBufferSerializable<BenchmarkCore.SomeTable>.Serializer => Serializer;

        #region Serializer for BenchmarkCore.SomeTable

        [FlatSharpGeneratedSerializerAttribute(FlatBufferDeserializationOption.VectorCacheMutable)]
        private sealed class GeneratedSerializer : IGeneratedSerializer<BenchmarkCore.SomeTable>
        {
            // Method generated to help AOT compilers make good decisions about generics.
            public void __AotHelper()
            {
                checked
                {
                    this.Write<ISpanWriter>(default!, new byte[10], default!, default!, default!);
                    this.Write<SpanWriter>(default!, new byte[10], default!, default!, default!);

                    this.Parse<IInputBuffer>(default!, 0);
                    this.Parse<MemoryInputBuffer.Wrapper>(default!, 0);
                    this.Parse<MemoryInputBuffer>(default!, 0);
                    this.Parse<ReadOnlyMemoryInputBuffer.Wrapper>(default!, 0);
                    this.Parse<ReadOnlyMemoryInputBuffer>(default!, 0);
                    this.Parse<ArrayInputBuffer.Wrapper>(default!, 0);
                    this.Parse<ArrayInputBuffer>(default!, 0);

#if FLATSHARP_UNSAFE
                        this.Parse<FlatSharp.Unsafe.UnsafeArrayInputBuffer>(default!, 0);
                        this.Parse<FlatSharp.Unsafe.UnsafeArrayInputBuffer.Wrapper>(default!, 0);
                        this.Parse<FlatSharp.Unsafe.UnsafeMemoryInputBuffer>(default!, 0);
                        this.Parse<FlatSharp.Unsafe.UnsafeMemoryInputBuffer.Wrapper>(default!, 0);
                        this.Write<FlatSharp.Unsafe.UnsafeSpanWriter>(default!, new byte[10], default!, default!, default!);
                        this.Write<FlatSharp.Unsafe.UnsafeSpanWriter.Wrapper>(default!, new byte[10], default!, default!, default!);
#endif

                    throw new InvalidOperationException("__AotHelper is not intended to be invoked");
                }
            }

            public void Write<TSpanWriter>(TSpanWriter writer, Span<byte> target, BenchmarkCore.SomeTable root, int offset, SerializationContext context)
                where TSpanWriter : ISpanWriter
            {
                checked
                {
                    WriteInlineValueOf_ab6bd3c1d1f5437997779c71456266d8(writer, target, root, offset, context);
                }
            }

            public int GetMaxSize(BenchmarkCore.SomeTable root)
            {
                checked
                {
                    return GetMaxSizeOf_ab6bd3c1d1f5437997779c71456266d8(root);
                }
            }

            public BenchmarkCore.SomeTable Parse<TInputBuffer>(TInputBuffer buffer, int offset)
                where TInputBuffer : IInputBuffer
            {
                checked
                {
                    return Read_ab6bd3c1d1f5437997779c71456266d8(buffer, offset);
                }
            }

            private static int GetMaxSizeOf_ab6bd3c1d1f5437997779c71456266d8(BenchmarkCore.SomeTable value)
            {
                checked
                {

                    int runningSum = 26 + 7;
                    ;
                    return runningSum;

                }
            }

            private static BenchmarkCore.SomeTable Read_ab6bd3c1d1f5437997779c71456266d8<TInputBuffer>(
                TInputBuffer buffer,
                int offset) where TInputBuffer : IInputBuffer
            {
                checked
                {
                    return new tableReader_5638061458e54434a9e6809fea83ec13<TInputBuffer>(buffer, offset + buffer.ReadUOffset(offset));
                }
            }

            private sealed class tableReader_5638061458e54434a9e6809fea83ec13<TInputBuffer>
                : BenchmarkCore.SomeTable
                , IFlatBufferDeserializedObject
                where TInputBuffer : IInputBuffer
            {
                private static readonly FlatBufferDeserializationContext __CtorContext
                    = new FlatBufferDeserializationContext(FlatBufferDeserializationOption.VectorCacheMutable);

                private readonly TInputBuffer __buffer;
                private readonly int __offset;
                private readonly int __vtableOffset;
                private readonly int __vtableMaxIndex;
                private BenchmarkCore.Struct? __index0Value;
                private bool __hasIndex0Value;

                public tableReader_5638061458e54434a9e6809fea83ec13(TInputBuffer buffer, int offset) : base(__CtorContext)
                {
                    checked
                    {
                        this.__buffer = buffer;
                        this.__offset = offset;
                        buffer.InitializeVTable(offset, out var __vtableLocation, out var __vtableMaxIndex);
                        this.__vtableOffset = __vtableLocation;
                        this.__vtableMaxIndex = __vtableMaxIndex;
                        base.OnFlatSharpDeserialized(__CtorContext);
                    }
                }

                Type IFlatBufferDeserializedObject.TableOrStructType => typeof(BenchmarkCore.SomeTable);
                FlatBufferDeserializationContext IFlatBufferDeserializedObject.DeserializationContext => __CtorContext;
                IInputBuffer? IFlatBufferDeserializedObject.InputBuffer => this.__buffer;


                public override BenchmarkCore.Struct? Struct
                {
                    get
                    {
                        checked
                        {

                            if (!this.__hasIndex0Value)
                            {
                                this.__index0Value = ReadIndex0Value(this.__buffer, this.__offset, this.__vtableOffset, this.__vtableMaxIndex);
                                this.__hasIndex0Value = true;
                            }
                            return this.__index0Value;

                        }
                    }

                    set
                    {
                        checked
                        { this.__index0Value = value; this.__hasIndex0Value = true; }
                    }
                }


                [System.Runtime.CompilerServices.MethodImplAttribute(System.Runtime.CompilerServices.MethodImplOptions.AggressiveInlining)]
                private static BenchmarkCore.Struct? ReadIndex0Value(
                    TInputBuffer buffer,
                    int offset,
                    int vtableOffset,
                    int maxVtableIndex)
                {
                    checked
                    {

                        if (0 > maxVtableIndex)
                        {
                            return null;
                        }

                        ushort relativeOffset = buffer.ReadUShort(vtableOffset + 4);
                        if (relativeOffset == 0)
                        {
                            return null;
                        }

                        int absoluteLocation = offset + relativeOffset;
                        return Read_f912d8cdf63249a0a6f3a894e85d9241(buffer, absoluteLocation); ;
                    }
                }
            }



            private static void WriteInlineValueOf_ab6bd3c1d1f5437997779c71456266d8<TSpanWriter>(
                TSpanWriter spanWriter,
                Span<byte> span,
                BenchmarkCore.SomeTable value,
                int offset,
                SerializationContext context) where TSpanWriter : ISpanWriter
            {
                checked
                {

                    int tableStart = context.AllocateSpace(23, sizeof(int));
                    spanWriter.WriteUOffset(span, offset, tableStart, context);
                    int currentOffset = tableStart + sizeof(int); // skip past vtable soffset_t.

                    int vtableLength = 4;
                    Span<byte> vtable = stackalloc byte[6];

                    var index0Value = value.Struct;

                    var index0Offset = tableStart;
                    if (!(index0Value is null))
                    {

                        currentOffset += SerializationHelpers.GetAlignmentError(currentOffset, 8);
                        index0Offset = currentOffset;
                        currentOffset += 12;

                        WriteInlineValueOf_f912d8cdf63249a0a6f3a894e85d9241(
                            spanWriter,
                            span,
                            index0Value!,
                            index0Offset,
                            context);

                        vtableLength = 6;
                    }
                    spanWriter.WriteUShort(vtable, (ushort)(index0Offset - tableStart), 4, context);
                    int tableLength = currentOffset - tableStart;
                    context.Offset -= 23 - tableLength;
                    spanWriter.WriteUShort(vtable, (ushort)vtableLength, 0, context);
                    spanWriter.WriteUShort(vtable, (ushort)tableLength, sizeof(ushort), context);
                    int vtablePosition = context.FinishVTable(span, vtable.Slice(0, vtableLength));
                    spanWriter.WriteInt(span, tableStart - vtablePosition, tableStart, context);
                }
            }

            [System.Runtime.CompilerServices.MethodImplAttribute(System.Runtime.CompilerServices.MethodImplOptions.AggressiveInlining)]
            private static int GetMaxSizeOf_f912d8cdf63249a0a6f3a894e85d9241(BenchmarkCore.Struct value)
            {
                checked
                {
                    return 19;
                }
            }

            private static BenchmarkCore.Struct Read_f912d8cdf63249a0a6f3a894e85d9241<TInputBuffer>(
                TInputBuffer buffer,
                int offset) where TInputBuffer : IInputBuffer
            {
                checked
                {
                    return new structReader_0ef3218272194b8fbcd6fc5aa8791c9d<TInputBuffer>(buffer, offset);
                }
            }

            private sealed class structReader_0ef3218272194b8fbcd6fc5aa8791c9d<TInputBuffer>
                : BenchmarkCore.Struct
                , IFlatBufferDeserializedObject
                where TInputBuffer : IInputBuffer
            {
                private static readonly FlatBufferDeserializationContext __CtorContext
                    = new FlatBufferDeserializationContext(FlatBufferDeserializationOption.VectorCacheMutable);

                private readonly TInputBuffer __buffer;
                private readonly int __offset;
                private BenchmarkCore.OtherStruct __index0Value;
                private bool __hasIndex0Value;
                private System.Int32 __index1Value;
                private bool __hasIndex1Value;

                public structReader_0ef3218272194b8fbcd6fc5aa8791c9d(TInputBuffer buffer, int offset) : base(__CtorContext)
                {
                    checked
                    {
                        this.__buffer = buffer;
                        this.__offset = offset;
                        base.OnFlatSharpDeserialized(__CtorContext);
                    }
                }

                Type IFlatBufferDeserializedObject.TableOrStructType => typeof(BenchmarkCore.Struct);
                FlatBufferDeserializationContext IFlatBufferDeserializedObject.DeserializationContext => __CtorContext;
                IInputBuffer? IFlatBufferDeserializedObject.InputBuffer => this.__buffer;


                public override BenchmarkCore.OtherStruct Other
                {
                    get
                    {
                        checked
                        {

                            if (!this.__hasIndex0Value)
                            {
                                this.__index0Value = ReadIndex0Value(this.__buffer, this.__offset, default, default);
                                this.__hasIndex0Value = true;
                            }
                            return this.__index0Value;

                        }
                    }

                    set
                    {
                        checked
                        { this.__index0Value = value; this.__hasIndex0Value = true; WriteIndex0Value(this.__buffer, __offset, value); }
                    }
                }

                public override System.Int32 Int
                {
                    get
                    {
                        checked
                        {

                            if (!this.__hasIndex1Value)
                            {
                                this.__index1Value = ReadIndex1Value(this.__buffer, this.__offset, default, default);
                                this.__hasIndex1Value = true;
                            }
                            return this.__index1Value;

                        }
                    }

                    set
                    {
                        checked
                        { this.__index1Value = value; this.__hasIndex1Value = true; WriteIndex1Value(this.__buffer, __offset, value); }
                    }
                }


                [System.Runtime.CompilerServices.MethodImplAttribute(System.Runtime.CompilerServices.MethodImplOptions.AggressiveInlining)]
                private static BenchmarkCore.OtherStruct ReadIndex0Value(
                    TInputBuffer buffer,
                    int offset,
                    int vtableOffset,
                    int maxVtableIndex)
                {
                    checked
                    {
                        return Read_bdeb29bfaea148fdab079ee79e9006ee(buffer, offset + 0); ;
                    }
                }

                [System.Runtime.CompilerServices.MethodImplAttribute(System.Runtime.CompilerServices.MethodImplOptions.AggressiveInlining)]
                private static void WriteIndex0Value(
                    TInputBuffer buffer,
                    int offset,
                    BenchmarkCore.OtherStruct value)
                {
                    checked
                    {

                        WriteInlineValueOf_bdeb29bfaea148fdab079ee79e9006ee(
                            default(SpanWriter),
                            buffer.GetByteMemory(0, buffer.Length).Span,
                            value,
                            offset + 0,
                            null);
                    }
                }

                [System.Runtime.CompilerServices.MethodImplAttribute(System.Runtime.CompilerServices.MethodImplOptions.AggressiveInlining)]
                private static System.Int32 ReadIndex1Value(
                    TInputBuffer buffer,
                    int offset,
                    int vtableOffset,
                    int maxVtableIndex)
                {
                    checked
                    {
                        return Read_c603a4aa7ca542848937774b32bc6ccc(buffer, offset + 8); ;
                    }
                }

                [System.Runtime.CompilerServices.MethodImplAttribute(System.Runtime.CompilerServices.MethodImplOptions.AggressiveInlining)]
                private static void WriteIndex1Value(
                    TInputBuffer buffer,
                    int offset,
                    System.Int32 value)
                {
                    checked
                    {

                        WriteInlineValueOf_c603a4aa7ca542848937774b32bc6ccc(
                            default(SpanWriter),
                            buffer.GetByteMemory(0, buffer.Length).Span,
                            value,
                            offset + 8,
                            null);
                    }
                }
            }



            private static void WriteInlineValueOf_f912d8cdf63249a0a6f3a894e85d9241<TSpanWriter>(
                TSpanWriter spanWriter,
                Span<byte> span,
                BenchmarkCore.Struct value,
                int offset,
                SerializationContext context) where TSpanWriter : ISpanWriter
            {
                checked
                {
                    Span<byte> scopedSpan = span.Slice(offset, 12);

                    if (value is null)
                    {
                        scopedSpan.Clear();
                        return;
                    }

                    WriteInlineValueOf_bdeb29bfaea148fdab079ee79e9006ee(spanWriter, scopedSpan, value.Other, 0, context);
                    WriteInlineValueOf_c603a4aa7ca542848937774b32bc6ccc(spanWriter, scopedSpan, value.Int, 8, context);
                }
            }

            [System.Runtime.CompilerServices.MethodImplAttribute(System.Runtime.CompilerServices.MethodImplOptions.AggressiveInlining)]
            private static int GetMaxSizeOf_bdeb29bfaea148fdab079ee79e9006ee(BenchmarkCore.OtherStruct value)
            {
                checked
                {
                    return 15;
                }
            }

            private static BenchmarkCore.OtherStruct Read_bdeb29bfaea148fdab079ee79e9006ee<TInputBuffer>(
                TInputBuffer buffer,
                int offset) where TInputBuffer : IInputBuffer
            {
                checked
                {
                    return new structReader_3bf6400db7b74e88ac907b600e48c573<TInputBuffer>(buffer, offset);
                }
            }

            private sealed class structReader_3bf6400db7b74e88ac907b600e48c573<TInputBuffer>
                : BenchmarkCore.OtherStruct
                , IFlatBufferDeserializedObject
                where TInputBuffer : IInputBuffer
            {
                private static readonly FlatBufferDeserializationContext __CtorContext
                    = new FlatBufferDeserializationContext(FlatBufferDeserializationOption.VectorCacheMutable);

                private readonly TInputBuffer __buffer;
                private readonly int __offset;
                private System.Int64 __index0Value;
                private bool __hasIndex0Value;

                public structReader_3bf6400db7b74e88ac907b600e48c573(TInputBuffer buffer, int offset) : base(__CtorContext)
                {
                    checked
                    {
                        this.__buffer = buffer;
                        this.__offset = offset;
                        base.OnFlatSharpDeserialized(__CtorContext);
                    }
                }

                Type IFlatBufferDeserializedObject.TableOrStructType => typeof(BenchmarkCore.OtherStruct);
                FlatBufferDeserializationContext IFlatBufferDeserializedObject.DeserializationContext => __CtorContext;
                IInputBuffer? IFlatBufferDeserializedObject.InputBuffer => this.__buffer;


                public override System.Int64 Long
                {
                    get
                    {
                        checked
                        {

                            if (!this.__hasIndex0Value)
                            {
                                this.__index0Value = ReadIndex0Value(this.__buffer, this.__offset, default, default);
                                this.__hasIndex0Value = true;
                            }
                            return this.__index0Value;

                        }
                    }

                    set
                    {
                        checked
                        { this.__index0Value = value; this.__hasIndex0Value = true; WriteIndex0Value(this.__buffer, __offset, value); }
                    }
                }


                [System.Runtime.CompilerServices.MethodImplAttribute(System.Runtime.CompilerServices.MethodImplOptions.AggressiveInlining)]
                private static System.Int64 ReadIndex0Value(
                    TInputBuffer buffer,
                    int offset,
                    int vtableOffset,
                    int maxVtableIndex)
                {
                    checked
                    {
                        return Read_01d6445792fc45499ee9a6760b6bec00(buffer, offset + 0); ;
                    }
                }

                [System.Runtime.CompilerServices.MethodImplAttribute(System.Runtime.CompilerServices.MethodImplOptions.AggressiveInlining)]
                private static void WriteIndex0Value(
                    TInputBuffer buffer,
                    int offset,
                    System.Int64 value)
                {
                    checked
                    {

                        WriteInlineValueOf_01d6445792fc45499ee9a6760b6bec00(
                            default(SpanWriter),
                            buffer.GetByteMemory(0, buffer.Length).Span,
                            value,
                            offset + 0,
                            null);
                    }
                }
            }



            private static void WriteInlineValueOf_bdeb29bfaea148fdab079ee79e9006ee<TSpanWriter>(
                TSpanWriter spanWriter,
                Span<byte> span,
                BenchmarkCore.OtherStruct value,
                int offset,
                SerializationContext context) where TSpanWriter : ISpanWriter
            {
                checked
                {
                    Span<byte> scopedSpan = span.Slice(offset, 8);

                    if (value is null)
                    {
                        scopedSpan.Clear();
                        return;
                    }

                    WriteInlineValueOf_01d6445792fc45499ee9a6760b6bec00(spanWriter, scopedSpan, value.Long, 0, context);
                }
            }

            [System.Runtime.CompilerServices.MethodImplAttribute(System.Runtime.CompilerServices.MethodImplOptions.AggressiveInlining)]
            private static int GetMaxSizeOf_01d6445792fc45499ee9a6760b6bec00(System.Int64 value)
            {
                checked
                {
                    return 15;
                }
            }

            [System.Runtime.CompilerServices.MethodImplAttribute(System.Runtime.CompilerServices.MethodImplOptions.AggressiveInlining)]
            private static System.Int64 Read_01d6445792fc45499ee9a6760b6bec00<TInputBuffer>(
                TInputBuffer buffer,
                int offset) where TInputBuffer : IInputBuffer
            {
                checked
                {
                    return buffer.ReadLong(offset);
                }
            }

            [MethodImpl(MethodImplOptions.AggressiveInlining)]
            private static void WriteInlineValueOf_01d6445792fc45499ee9a6760b6bec00<TSpanWriter>(
                TSpanWriter spanWriter,
                Span<byte> span,
                System.Int64 value,
                int offset,
                SerializationContext context) where TSpanWriter : ISpanWriter
            {
                checked
                {
                    spanWriter.WriteLong(span, value, offset, context);
                }
            }

            [System.Runtime.CompilerServices.MethodImplAttribute(System.Runtime.CompilerServices.MethodImplOptions.AggressiveInlining)]
            private static int GetMaxSizeOf_c603a4aa7ca542848937774b32bc6ccc(System.Int32 value)
            {
                checked
                {
                    return 7;
                }
            }

            [System.Runtime.CompilerServices.MethodImplAttribute(System.Runtime.CompilerServices.MethodImplOptions.AggressiveInlining)]
            private static System.Int32 Read_c603a4aa7ca542848937774b32bc6ccc<TInputBuffer>(
                TInputBuffer buffer,
                int offset) where TInputBuffer : IInputBuffer
            {
                checked
                {
                    return buffer.ReadInt(offset);
                }
            }

            [MethodImpl(MethodImplOptions.AggressiveInlining)]
            private static void WriteInlineValueOf_c603a4aa7ca542848937774b32bc6ccc<TSpanWriter>(
                TSpanWriter spanWriter,
                Span<byte> span,
                System.Int32 value,
                int offset,
                SerializationContext context) where TSpanWriter : ISpanWriter
            {
                checked
                {
                    spanWriter.WriteInt(span, value, offset, context);
                }
            }
        }

        #endregion
    }
    [FlatBufferStruct]
    [System.Runtime.CompilerServices.CompilerGenerated]
    public partial class Struct
        : object
    {
        public Struct()
        {
            checked
            {
                this.Other = new BenchmarkCore.OtherStruct();
                this.OnInitialized(null);
            }
        }

#pragma warning disable CS8618
        protected Struct(FlatBufferDeserializationContext context)
        {
            checked
            {
            }
        }

#pragma warning restore CS8618
        public Struct(Struct source)
        {
            checked
            {
                this.Other = FlatSharp.Compiler.Generated.CloneHelpers_333b1ab44c624c3585d66eae70966232.Clone(source.Other);
                this.Int = FlatSharp.Compiler.Generated.CloneHelpers_333b1ab44c624c3585d66eae70966232.Clone(source.Int);
                this.OnInitialized(null);
            }
        }

        partial void OnInitialized(FlatBufferDeserializationContext? context);

        protected void OnFlatSharpDeserialized(FlatBufferDeserializationContext? context) => this.OnInitialized(context);

        [FlatBufferItemAttribute(0, WriteThrough = true)]
        public virtual global::BenchmarkCore.OtherStruct Other { get; set; }

        [FlatBufferItemAttribute(1, WriteThrough = true)]
        public virtual System.Int32 Int { get; set; }

    }
    [FlatBufferStruct]
    [System.Runtime.CompilerServices.CompilerGenerated]
    public partial class OtherStruct
        : object
    {
        public OtherStruct()
        {
            checked
            {
                this.OnInitialized(null);
            }
        }

#pragma warning disable CS8618
        protected OtherStruct(FlatBufferDeserializationContext context)
        {
            checked
            {
            }
        }

#pragma warning restore CS8618
        public OtherStruct(OtherStruct source)
        {
            checked
            {
                this.Long = FlatSharp.Compiler.Generated.CloneHelpers_333b1ab44c624c3585d66eae70966232.Clone(source.Long);
                this.OnInitialized(null);
            }
        }

        partial void OnInitialized(FlatBufferDeserializationContext? context);

        protected void OnFlatSharpDeserialized(FlatBufferDeserializationContext? context) => this.OnInitialized(context);

        [FlatBufferItemAttribute(0, WriteThrough = true)]
        public virtual System.Int64 Long { get; set; }

    }
}
#nullable restore
#pragma warning restore 0618
