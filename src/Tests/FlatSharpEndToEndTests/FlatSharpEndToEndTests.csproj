<Project Sdk="Microsoft.NET.Sdk">
  <PropertyGroup>
    <NeedsFlatSharpCompiler>true</NeedsFlatSharpCompiler>
    <TargetFrameworks>net9.0</TargetFrameworks>
    <TargetFrameworks Condition=" '$(PipelineBuild)' == 'true' and '$([MSBuild]::IsOSUnixLike())' != 'true' ">net472;net6.0;net7.0;net8.0;net9.0</TargetFrameworks>
    <TargetFrameworks Condition=" '$(PipelineBuild)' == 'true' and '$([MSBuild]::IsOSUnixLike())' == 'true' ">net6.0;net7.0;net8.0;net9.0</TargetFrameworks>
    <IsPackable>false</IsPackable>
    <AssemblyName>FlatSharpEndToEndTests</AssemblyName>
    <RootNamespace>FlatSharpTests</RootNamespace>
    <AllowUnsafeBlocks>true</AllowUnsafeBlocks>
    <Nullable>annotations</Nullable>
    <DocumentationFile>$(OutputPath)$(AssemblyName).xml</DocumentationFile>
    <NoWarn>CS1591</NoWarn>
    <RunAnalyzersDuringLiveAnalysis>False</RunAnalyzersDuringLiveAnalysis>
    <EnableNETAnalyzers>True</EnableNETAnalyzers>
    <AnalysisLevel>latest</AnalysisLevel>
    <FlatSharpFileVisibility>true</FlatSharpFileVisibility>
  </PropertyGroup>

  <PropertyGroup Condition=" '$(BuildAot)' == 'true' ">
    <PublishAot>true</PublishAot>
    <TargetFrameworks>net9.0</TargetFrameworks>
    <StartupObject>FlatSharpEndToEndTests.Program</StartupObject>
    <OutputType>exe</OutputType>
    <DefineConstants>$(DefineConstants);AOT</DefineConstants>
  </PropertyGroup>
    
  <ItemGroup Condition=" '$(BuildAot)' == 'true' ">
    <PackageReference Include="Microsoft.Testing.Extensions.TrxReport" />
    <PackageReference Include="MSTest.Engine" />
    <PackageReference Include="MSTest.SourceGeneration" />
  </ItemGroup>

  <ItemGroup>
    <PackageReference Include="Grpc.Core" />
    <PackageReference Include="Grpc.Core.Api" />
    <PackageReference Include="Microsoft.CSharp" />
    <PackageReference Include="MSTest.TestAdapter" />
    <PackageReference Include="MSTest.TestFramework" />
    <PackageReference Include="System.Threading.Channels" />

    <PackageReference Include="coverlet.collector" Condition=" '$(CoverageBuild)' == 'true' ">
      <PrivateAssets>all</PrivateAssets>
      <IncludeAssets>runtime; build; native; contentfiles; analyzers; buildtransitive</IncludeAssets>
    </PackageReference>
      
    <PackageReference Include="Microsoft.NET.Test.Sdk" />
    <PackageReference Include="Microsoft.TestPlatform.ObjectModel" />
  </ItemGroup>

  <ItemGroup>
    <ProjectReference Include="..\..\FlatSharp.Runtime\FlatSharp.Runtime.csproj" />
    <ProjectReference Include="..\..\FlatSharp.UnityPolyfills\FlatSharp.UnityPolyfills.csproj" />
    <ProjectReference Include="..\..\Google.FlatBuffers\Google.FlatBuffers.csproj" />
  </ItemGroup>

  <ItemGroup>
    <FlatSharpSchema Include="**\*.fbs" />
    <FlatSharpSchema Remove="ToStringMethods/ToStringMethods.fbs" />
    <FlatSharpSchema Remove="StructEquality/StructEquality.fbs" />
  </ItemGroup>

  <Target Name="FlatSharpFbsCompileToString" BeforeTargets="ResolveAssemblyReferences">
    <PropertyGroup>
      <CompilerVersion>net8.0</CompilerVersion>
    </PropertyGroup>

    <PropertyGroup>
	  <FlatSharpOutput>$(IntermediateOutputPath)</FlatSharpOutput>
      <FlatSharpOutput Condition=" '$(FlatSharpMutationTestingMode)' == 'true' ">$(MSBuildProjectDirectory)/</FlatSharpOutput>
      <FlatSharpOutput>$(FlatSharpOutput)WithGenerateMethodsOption</FlatSharpOutput>
    </PropertyGroup>

	<MakeDir Directories="$(FlatSharpOutput)" Condition="!Exists('$(FlatSharpOutput)')" />

	<!-- find compiler and set base command -->
    <PropertyGroup>
      <CompilerPath>$([System.IO.Path]::GetFullPath('$(MSBuildThisFileDirectory)\..\tools\$(CompilerVersion)\FlatSharp.Compiler.dll'))</CompilerPath>
      <CompilerPath Condition=" '$(FlatSharpCompilerPath)' != '' ">$(FlatSharpCompilerPath)</CompilerPath>
      <CompilerCommand>dotnet &quot;$(CompilerPath)&quot; --input &quot;ToStringMethods/ToStringMethods.fbs;StructEquality/StructEquality.fbs&quot; --output &quot;$(FlatSharpOutput)&quot; --generate-methods</CompilerCommand>
    </PropertyGroup>

    <Message Text="$(CompilerCommand)" Importance="high" />
    <Exec Command="$(CompilerCommand)" CustomErrorRegularExpression=".*" />

    <ItemGroup>
      <GeneratedFbsToString Include="$([MSBuild]::EnsureTrailingSlash('$(FlatSharpOutput)'))FlatSharp*.cs" />
      <Compile Include="@(GeneratedFbsToString)" />
      <FileWrites Include="@(GeneratedFbsToString)" />
    </ItemGroup>
  </Target>
</Project>  